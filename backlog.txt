Initiated the project with rails new myapp --webpack=react
Added a components folder to app/javascript
gem install foreman
Created a Procfile foreman start and it will run on port 5100 or set -p 3000
rails generate controller Pages home help
Deleting all traces of Active record
Delete rails/all in application.rb
commented out config/environment/development.rb line 33:    # config.active_storage.service = :local
line 44
IN app/javascript/applications.js deleted: 
//= require activestorage
deleted content of app/javascript/cable.js
// Action Cable provides the framework to deal with WebSockets in Rails.
// You can generate new channels where WebSocket features live using the `rails generate channel` command.
//
//= require action_cable
//= require_self
//= require_tree ./channels

(function() {
  this.App || (this.App = {});

  App.cable = ActionCable.createConsumer();

}).call(this);

deleted config/database.yml

Ran "rails g scaffold user:string email:string"
Running via Spring preloader in process 35487
      invoke  mongoid
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      invoke  resource_route
       route    resources :users
      invoke  scaffold_controller
      create    app/controllers/users_controller.rb
      invoke    erb
      create      app/views/users
      create      app/views/users/index.html.erb
      create      app/views/users/edit.html.erb
      create      app/views/users/show.html.erb
      create      app/views/users/new.html.erb
      create      app/views/users/_form.html.erb
      invoke    test_unit
      create      test/controllers/users_controller_test.rb
      create      test/system/users_test.rb
      invoke    helper
      create      app/helpers/users_helper.rb
      invoke      test_unit
      invoke    jbuilder
      create      app/views/users/index.json.jbuilder
      create      app/views/users/show.json.jbuilder
      create      app/views/users/_user.json.jbuilder
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/users.coffee
      invoke    scss
      create      app/assets/stylesheets/users.scss
      invoke  scss
      create    app/assets/stylesheets/scaffolds.scss
Added 
protect_from_forgery with: :exception to application controller


There are two Ways of building the app, might create two branches, one way is to have a bunch of components manages by the ujs driver.
The other way is to have a single page application and make api calls using axios/fetch
I am not sure how option 1 will work with redux, the routing probably stil, has to be managed by rails. 

Thing to keep in mind, the data fetching method also has to allow for control. This means that not anyone can make the api all just by looking at the js. 

One the test branch:
Seprating the logic, using create react app to create a standalone react app which will make calls to the rails server. 
Deleted references to webpackers, and yarn.
deleting gems

Installed rack CORS gem 
and setup in application.rb

Should I seup the app to be api only? http://edgeguides.rubyonrails.org/api_app.html

Look into access control https://github.com/chaps-io/access-granted. Careful this uses activerecors so might not work with MongoID

Now the biggest question is how to do user authentification

We need a way to manage JWT tokens whih is shared between the react app and the rails server

Transformed Rails into an API by follwoing instructions on their website. 

Reactivate bcrypt to use has_secure_password

Added: protect_from_forgery with: :null_session to Application 

Installed two more gems JWT and simple command

Create a command to authenticate users

check if it safe creating a token using the user's password

Moved

Looks like I avoided a shitty unsecure feature of MongoID when you do find_by and enter a wrong key then nil, you get a result back

Look at JWT alternatives

Think about using https://api.rubyonrails.org/v5.2/classes/ActiveSupport/MessageEncryptor.html

Should we go back to a sql table? 
I am starting to think that we can just have decks with references to other decks and flashcards.